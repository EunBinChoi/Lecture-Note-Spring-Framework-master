[ 빈 생명주기 (life cycle) ]

1) ApplicationContext (스프링 컨테이너, ctx) 생성 

2) 빈 등록 (xml, @Configuration)

3) 의존관계 트리 생성

4) 빈 생성 + (콜백 함수 등록)

5) 스프링의 Aware 인터페이스가 implements된 클래스가 있는지 확인
   만약 있으면 setter 호출
   
   ex) class AppConfig implements EnvironmentAware 
   	  -> setEnvironment()

   ex) BeanNameAware, BeanClassLoaderAware ........
   
6) 빈 생성 생명주기 콜백함수 호출
	a. @PostConstruct 적용 메소드 호출
	b. 빈이 InitializingBean 인터페이스 구현시 afterPropertiesSet() 호출
	c. 빈이 @Bean(init-method="")를 지정하면 지정한 메소드 호출
	
7) 빈 소멸 생명주기 콜백함수 호출
	a. @PreDestroy 적용 메소드 호출
	b. 빈이 DisposableBean 이터페이스를 구현시 destroy() 호출
	c. 빈이 @Bean(destroy-method="")를 지정하면 지정한 메소드 호출

8) ApplicationContext (스프링 컨테이너, ctx) 소멸